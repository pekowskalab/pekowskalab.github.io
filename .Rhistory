}
shah_table_high = create_results_table( clustering_res = clusters_Shah,
pattern = me2_Shah_pattern,
clusterID = 5, ENSG = ensg,
GO_terms = go_termsII )
load(paste0(objects, 'ENSEMBL_genes_for_Average_profiles.Rdata'))
shah_table_high = create_results_table( clustering_res = clusters_Shah,
pattern = me2_Shah_pattern,
clusterID = 5, ENSG = ensg,
GO_terms = go_termsII )
load(paste0(objects,'H3K4me2_profiles_filtereed.RData' ))
shah_table_high = create_results_table( clustering_res = clusters_Shah,
pattern = me2_Shah_pattern,
clusterID = 5, ENSG = ensg,
GO_terms = go_termsII )
load(paste0(objects, 'Shah_H3K4me2_clustering.RData'))
load(paste0(objects, 'Shah_Thermo_H3K4me2_clustering.RData'))
load(paste0(objects, 'H3K4me2_HMD_clustering.RData'))
load(paste0(objects, 'Encode_H3K4me2_clustering.RData'))
load(paste0(objects, 'Encode_rep1_H3K4me2_clustering.RData'))
load(paste0(objects, 'Encode_rep2_H3K4me2_clustering.RData'))
load(paste0(objects, 'Bcell_H3K4me2_clustering.RData'))
shah_table_high = create_results_table( clustering_res = clusters_Shah,
pattern = me2_Shah_pattern,
clusterID = 5, ENSG = ensg,
GO_terms = go_termsII )
shah_table_high
HMD_Shah = create_results_table( clustering_res = clusters_HMD,
pattern = me2_HMD_pattern,
clusterID = 2,
ENSG = ensg,
GO_terms = go_termsII )
encode_table2 = create_results_table( clustering_res = clusters_encode2,
pattern = me2_encode_pattern2,
clusterID = 1,
ENSG = ensg,
GO_terms = go_termsII )
Bcell_table = create_results_table( clustering_res = clusters_bcell,
pattern = me2_Bcell_pattern,
clusterID = 4,
ENSG = ensg,
GO_terms = go_termsII )
getGOnames = function( id_list, mappings ){
# id_list=shah_table_high; mappings=goterms
x=as.data.frame(id_list)
colnames(x) = 'P-val'
x$GO_name = mappings[ match(rownames(x), names(mappings))  ]
return(x)
}
shah_bestAb = getGOnames( shah_bestAb, goterms )
HMD_Shah = getGOnames( HMD_Shah, goterms )
encode_table2 = getGOnames( encode_table2, goterms )
Bcell_table = getGOnames( Bcell_table, goterms )
HMD_Shah
go_termsII
Bcell_table
7,8,11
orderGO = shah_bestAb$GO_name[c(1,2,6,10,3,4,7,8,11,12,13,5,9)]
orderGO
shah_bestAb
shah_bestAb = create_results_table( clustering_res = clusters_best,
pattern = me2_best_pattern,
clusterID = 3,
ENSG = ensg,
GO_terms = go_termsII )
shah_bestAb
shah_bestAb1 = getGOnames( shah_bestAb, goterms )
shah_bestAb1
HMD_Shah = create_results_table( clustering_res = clusters_HMD,
pattern = me2_HMD_pattern,
clusterID = 2,
ENSG = ensg,
GO_terms = go_termsII )
encode_table2 = create_results_table( clustering_res = clusters_encode2,
pattern = me2_encode_pattern2,
clusterID = 1,
ENSG = ensg,
GO_terms = go_termsII )
Bcell_table = create_results_table( clustering_res = clusters_bcell,
pattern = me2_Bcell_pattern,
clusterID = 4,
ENSG = ensg,
GO_terms = go_termsII )
shah_bestAb$GO_name
shah_bestAb
shah_bestAb1 = getGOnames( shah_bestAb, goterms )
shah_bestAb1
orderGO = shah_bestAb1$GO_name[c(1,2,6,10,3,4,7,8,11,12,13,5,9)]
orderGO
shah_bestAb1[ match(orderGO,shah_bestAb1$GO_name) , ]
resMatrix = cbind( Shah_Thermo = shah_bestAb1[ match(orderGO,shah_bestAb1$GO_name) ,1 ],
HMD_Shah1 = HMD_Shah1[ match(orderGO,HMD_Shah1$GO_name) ,1 ],
encode_table21 = encode_table21[ match(orderGO,encode_table21$GO_name) ,1 ],
Bcell_table1 = Bcell_table1[ match(orderGO,Bcell_table1$GO_name) ,1 ])
HMD_Shah1 = getGOnames( HMD_Shah, goterms )
encode_table21 = getGOnames( encode_table2, goterms )
Bcell_table1 = getGOnames( Bcell_table, goterms )
orderGO = shah_bestAb1$GO_name[c(1,2,6,10,3,4,7,8,11,12,13,5,9)]
resMatrix = cbind( Shah_Thermo = shah_bestAb1[ match(orderGO,shah_bestAb1$GO_name) ,1 ],
HMD_Shah1 = HMD_Shah1[ match(orderGO,HMD_Shah1$GO_name) ,1 ],
encode_table21 = encode_table21[ match(orderGO,encode_table21$GO_name) ,1 ],
Bcell_table1 = Bcell_table1[ match(orderGO,Bcell_table1$GO_name) ,1 ])
resMatrix
rownames(resMatrix) = orderGO
resMatrix
image( resMatrix )
image( resMatrix )
image( t(resMatrix) )
resMatrix
min(resMatrix)
resMatrix_cut = cut(resMatrix, seq(10^15,1,length.out = 256), labels=F )
resMatrix_cut
resMatrix_cut = cut(resMatrix, seq(e-15,1,length.out = 256), labels=F )
e-12
10^-1
resMatrix_cut = cut(resMatrix, seq(10^-15,1,length.out = 256), labels=F )
resMatrix_cut
resMatrix_cut = cut(as.numeric(resMatrix), seq(10^-15,1,length.out = 256), labels=F )
resMatrix_cut
resMatrix_cut = matrix( cut(as.numeric(resMatrix),
seq(10^-15,1,length.out = 256),
labels=F ),
nrow=nrow(resMatrix), ncol=ncol(resMatrix), byrow=FALSE )
resMatrix_cut
resMatrix_cut = matrix( cut(as.numeric(resMatrix),
seq(10^-15,1,length.out = 56),
labels=F ),
nrow=nrow(resMatrix), ncol=ncol(resMatrix), byrow=FALSE )
resMatrix_cut
resMatrix_cut = matrix( cut(as.numeric(resMatrix),
c(-Inf, seq(10^-10,1,length.out = 56)),
labels=F ),
nrow=nrow(resMatrix), ncol=ncol(resMatrix), byrow=FALSE )
resMatrix_cut
resMatrix_cut = matrix( cut(as.numeric(resMatrix),
c(-Inf, seq(10^-10,1,length.out = 56)),
labels=F ),
nrow=nrow(resMatrix), ncol=ncol(resMatrix), byrow=TRUE )
resMatrix_cut
resMatrix
resMatrix_cut = matrix( cut(as.numeric(resMatrix),
c(-Inf, seq(10^-10,10^-3,length.out = 10),1),
labels=F ),
nrow=nrow(resMatrix), ncol=ncol(resMatrix), byrow=FALSE )
resMatrix_cut
resMatrix_cut = matrix( cut(as.numeric(resMatrix),
c(-Inf, seq(10^-13,10^-3,length.out = 10),1),
labels=F ),
nrow=nrow(resMatrix), ncol=ncol(resMatrix), byrow=FALSE )
resMatrix_cut
resMatrix_cut = matrix( cut(as.numeric(resMatrix),
rev(c(-Inf, seq(10^-13,10^-3,length.out = 10),1)),
labels=F ),
nrow=nrow(resMatrix), ncol=ncol(resMatrix), byrow=FALSE )
resMatrix_cut
resMatrix[,1]
rev(c(-Inf, seq(10^-13,10^-3,length.out = 10),1))
seq(10^-13,10^-3,length.out = 10)
seq(10^-3,10^-13,length.out = 10)
seq(0.01,0.00000000001,length.out=10)
-log10(resMatrix)
resMatrix_cut = matrix( cut(as.numeric(-log10(resMatrix)),
0:14,
labels=F ),
nrow=nrow(resMatrix),
ncol=ncol(resMatrix),
byrow=FALSE )
resMatrix_cut
rownames(resMatrix_cut) = rownames(resMatrix)
colnames(resMatrix_cut) = colnames(resMatrix)
resMatrix_cut
image( t(resMatrix_cut) )
image( t(resMatrix_cut), col=colorRampPalette(c('white','red'))(14) )
image( 1:5,1:14,
t(resMatrix_cut), col=colorRampPalette(c('white','red'))(14) )
image( 1:4,1:13,
t(resMatrix_cut), col=colorRampPalette(c('white','red'))(14) )
resMatrix_cut = matrix( cut(as.numeric(-log10(resMatrix)),
1:15,
labels=F ),
nrow=nrow(resMatrix),
ncol=ncol(resMatrix),
byrow=FALSE )
rownames(resMatrix_cut) = rownames(resMatrix)
colnames(resMatrix_cut) = colnames(resMatrix)
image( 1:4,1:13,
t(resMatrix_cut), col=colorRampPalette(c('white','red'))(14) )
image( 1:4,1:13,axes=FALSE,
t(resMatrix_cut), col=colorRampPalette(c('white','red'))(14) )
resMatrix_cut = matrix( cut(as.numeric(-log10(resMatrix)),
1:16,
labels=F ),
nrow=nrow(resMatrix),
ncol=ncol(resMatrix),
byrow=FALSE )
rownames(resMatrix_cut) = rownames(resMatrix)
colnames(resMatrix_cut) = colnames(resMatrix)
image( 1:4,1:13,axes=FALSE, xl
t(resMatrix_cut), col=colorRampPalette(c('white','red'))(16) )
image( 1:4,1:13,axes=FALSE, xlab=FALSE, ylab=FALSE,
t(resMatrix_cut), col=colorRampPalette(c('white','red'))(16) )
image( 1:4,1:13,axes=FALSE, xlab='', ylab='',
t(resMatrix_cut), col=colorRampPalette(c('white','red'))(16) )
resMatrix_cut = matrix( cut(as.numeric(-log10(resMatrix)),
c(1:10,14,16),
labels=F ),
nrow=nrow(resMatrix),
ncol=ncol(resMatrix),
byrow=FALSE )
rownames(resMatrix_cut) = rownames(resMatrix)
colnames(resMatrix_cut) = colnames(resMatrix)
image( 1:4,1:13,axes=FALSE, xlab='', ylab='',
t(resMatrix_cut), col=colorRampPalette(c('white','red'))(16) )
box(col='black')
resMatrix_cut
par(mar=c(1,15,5,1))
image( 1:4,1:13,
t(resMatrix_cut), col=colorRampPalette(c('white','red'))(16) )
box(col='black')
t(resMatrix_cut)
par(mar=c(1,15,5,1))
image(
(resMatrix_cut),
col=colorRampPalette(c('white','red'))(16) )
box(col='black')
c(1:10,14,16)
par(mar=c(1,15,5,1))
image( t(resMatrix_cut),
col=colorRampPalette(c('white','red'))(12) )
box(col='black')
par(mar=c(5,15,1,1))
image( t(resMatrix_cut), axes=FALSE
col=colorRampPalette(c('white','red'))(12) )
box(col='black')
par(mar=c(5,15,1,1))
image( t(resMatrix_cut), axes=FALSE,
col=colorRampPalette(c('white','red'))(12) )
box(col='black')
axis(1,at=1:4,colnames(resMatrix_cut))
par(mar=c(5,15,1,1))
image( 0:4,0:13,t(resMatrix_cut), axes=FALSE,
col=colorRampPalette(c('white','red'))(12) )
box(col='black')
axis(1,at=1:4,colnames(resMatrix_cut))
par(mar=c(5,15,1,1))
image( 1:4,1:13,t(resMatrix_cut), axes=FALSE,
col=colorRampPalette(c('white','red'))(12) )
box(col='black')
axis(1,at=1:4,colnames(resMatrix_cut))
par(mar=c(5,15,1,1))
image( 1:4,1:13,t(resMatrix_cut), axes=FALSE,
col=colorRampPalette(c('white','red'))(12) )
box(col='black')
axis(1,at=1:4,colnames(resMatrix_cut), las=2)
par(mar=c(8,15,1,1))
image( 1:4,1:13,t(resMatrix_cut), axes=FALSE,xlab='',ylab='',
col=colorRampPalette(c('white','red'))(12) )
box(col='black')
axis(1,at=1:4,colnames(resMatrix_cut), las=2)
par(mar=c(8,15,1,1))
image( 1:4,1:13,t(resMatrix_cut), axes=FALSE,xlab='',ylab='',
col=colorRampPalette(c('white','red'))(12) )
box(col='black')
axis(1,at=1:4,c('Shah et al., Thermo',
'Shah et al., HMD',
'Encode K562', 'Encode B cell'),
las=2)
par(mar=c(10,15,1,1))
image( 1:4,1:13,t(resMatrix_cut), axes=FALSE,xlab='',ylab='',
col=colorRampPalette(c('white','red'))(12) )
box(col='black')
axis(1,at=1:4,c('Shah et al., Thermo',
'Shah et al., HMD',
'Encode K562', 'Encode B cell'),
las=2)
axis(2,at=1:13,colnames(resMatrix_cut),las=1)
axis(2,at=1:13,rownames(resMatrix_cut),las=1)
par(mar=c(10,20,1,1))
image( 1:4,1:13,t(resMatrix_cut), axes=FALSE,xlab='',ylab='',
col=colorRampPalette(c('white','red'))(12) )
box(col='black')
axis(1,at=1:4,c('Shah et al., Thermo',
'Shah et al., HMD',
'Encode K562', 'Encode B cell'),
las=2)
axis(2,at=1:13,rownames(resMatrix_cut),las=1)
pdf( paste0(figures, 'FigureS1_panelB_GO.pdf'), width=20, height=8, pointsize=24 )
par(mar=c(10,22,1,1))
image( 1:4,1:13,t(resMatrix_cut), axes=FALSE,xlab='',ylab='',
col=colorRampPalette(c('white','red'))(12) )
box(col='black')
axis(1,at=1:4,c('Shah et al., Thermo',
'Shah et al., HMD',
'Encode K562', 'Encode B cell'),
las=2)
axis(2,at=1:13,rownames(resMatrix_cut),las=1)
dev.off()
pdf( paste0(figures, 'FigureS1_panelB_GO.pdf'), fig.width=20, figheight=8, pointsize=24 )
par(mar=c(10,22,1,1))
pdf( paste0(figures, 'FigureS1_panelB_GO.pdf'), width=10, height=10, pointsize=24 )
par(mar=c(10,22,1,1))
image( 1:4,1:13,t(resMatrix_cut), axes=FALSE,xlab='',ylab='',
col=colorRampPalette(c('white','red'))(12) )
box(col='black')
axis(1,at=1:4,c('Shah et al., Thermo',
'Shah et al., HMD',
'Encode K562', 'Encode B cell'),
las=2)
axis(2,at=1:13,rownames(resMatrix_cut),las=1)
dev.off()
pdf( paste0(figures, 'FigureS1_panelB_GO.pdf'), width=13, height=10, pointsize=15 )
par(mar=c(10,22,1,1))
image( 1:4,1:13,t(resMatrix_cut), axes=FALSE,xlab='',ylab='',
col=colorRampPalette(c('white','red'))(12) )
box(col='black')
axis(1,at=1:4,c('Shah et al., Thermo',
'Shah et al., HMD',
'Encode K562', 'Encode B cell'),
las=2)
axis(2,at=1:13,rownames(resMatrix_cut),las=1)
dev.off()
pdf( paste0(figures, 'FigureS1_panelB_GO.pdf'), width=8, height=10, pointsize=15 )
par(mar=c(10,22,1,1))
image( 1:4,1:13,t(resMatrix_cut), axes=FALSE,xlab='',ylab='',
col=colorRampPalette(c('white','red'))(12) )
box(col='black')
axis(1,at=1:4,c('Shah et al., Thermo',
'Shah et al., HMD',
'Encode K562', 'Encode B cell'),
las=2)
axis(2,at=1:13,rownames(resMatrix_cut),las=1)
dev.off()
pdf( paste0(figures, 'FigureS1_panelB_GO.pdf'), width=8, height=10, pointsize=15 )
par(mar=c(10,25,1,1))
image( 1:4,1:13,t(resMatrix_cut), axes=FALSE,xlab='',ylab='',
col=colorRampPalette(c('white','red'))(12) )
box(col='black')
axis(1,at=1:4,c('Shah et al., Thermo',
'Shah et al., HMD',
'Encode K562', 'Encode B cell'),
las=2)
axis(2,at=1:13,rownames(resMatrix_cut),las=1)
dev.off()
pdf( paste0(figures, 'FigureS1_panelB_GO.pdf'), width=8, height=8, pointsize=15 )
par(mar=c(10,25,1,1))
image( 1:4,1:13,t(resMatrix_cut), axes=FALSE,xlab='',ylab='',
col=colorRampPalette(c('white','red'))(12) )
box(col='black')
axis(1,at=1:4,c('Shah et al., Thermo',
'Shah et al., HMD',
'Encode K562', 'Encode B cell'),
las=2)
axis(2,at=1:13,rownames(resMatrix_cut),las=1)
dev.off()
pdf( paste0(figures, 'FigureS1_panelB_GO.pdf'), width=8, height=8, pointsize=15 )
par(mar=c(10,25,1,1))
image( 1:4,1:13,t(resMatrix_cut), axes=FALSE,xlab='',ylab='',
col=colorRampPalette(c('white','red'))(12) )
box(col='black', lwd=2)
axis(1,at=1:4,c('Shah et al., Thermo',
'Shah et al., HMD',
'Encode K562', 'Encode B cell'),
las=2)
axis(2,at=1:13,rownames(resMatrix_cut),las=1)
dev.off()
image(0:1,1:length(c(1:10,14,16)), matrix(c(1:10,14,16)), col=colorRampPalette(c('white','red'))(12) )
image(0:1,1:length(c(1:10,14,16)), matrix(c(1:10,14,16)), col=colorRampPalette(c('white','red'))(12) )
par( mar(c(4,4,1,1)) )
image(0:1,1:length(c(1:10,14,16)), matrix(c(1:10,14,16)), col=colorRampPalette(c('white','red'))(12) )
par( mar(c(4,4,1,1)) )
image(0:1,0:length(c(1:10,14,16)),
matrix(c(1:10,14,16)),
col=colorRampPalette(c('white','red'))(12) )
par( mar(c(4,4,1,1)) )
image(0:length(c(1:10,14,16)), 0:1,
matrix(c(1:10,14,16)),
col=colorRampPalette(c('white','red'))(12) )
par( mar=c(4,4,1,1)) )
image(0:length(c(1:10,14,16)), 0:1,
matrix(c(1:10,14,16)),
col=colorRampPalette(c('white','red'))(12) )
par( mar=c(4,4,1,1))
image(0:length(c(1:10,14,16)), 0:1,
matrix(c(1:10,14,16)),
col=colorRampPalette(c('white','red'))(12) )
par( mar=c(10,4,10,1))
image(0:length(c(1:10,14,16)), 0:1,
matrix(c(1:10,14,16)),
col=colorRampPalette(c('white','red'))(12) )
par( mar=c(10,4,10,1))
image(0:length(c(1:10,14,16)), 0:1,
matrix(c(1:10,14,16)), axes=FALSE,xlab='',ylab='',
col=colorRampPalette(c('white','red'))(12) )
box(col='black', lwd=2)
par( mar=c(10,4,10,1))
image(0:length(c(1:10,14,16)), 0:1,
matrix(c(1:10,14,16)), axes=FALSE,xlab='',ylab='',
col=colorRampPalette(c('white','red'))(12) )
box(col='black', lwd=2)
axis(1,at=c(1:10,14,16) )
par( mar=c(15,4,15,1))
image(0:length(c(1:10,14,16)), 0:1,
matrix(c(1:10,14,16)), axes=FALSE,xlab='',ylab='',
col=colorRampPalette(c('white','red'))(12) )
box(col='black', lwd=2)
axis(1,at=c(1:10,14,16) )
pdf( paste0(figures, 'FigureS1_panelB_GO_colorScale.pdf'), width=8, height=8, pointsize=15 )
par( mar=c(15,4,15,1))
image(0:length(c(1:10,14,16)), 0:1,
matrix(c(1:10,14,16)), axes=FALSE,xlab='',ylab='',
col=colorRampPalette(c('white','red'))(12) )
box(col='black', lwd=2)
axis(1,at=c(1:10,14,16) )
dev.off()
library(geneplotter)
x=read.delim('/Volumes/PHOTOS_USA/HCT116/GSE106886_Rao-2017-RAD21notreat_vs_RAD21treat.Genes.DESeq2.txt')
rpkm=read.delim('/Volumes/PHOTOS_USA/HCT116/GSE106886_Rao-2017-Genes.rpkm.txt')
expressed = rpkm[ rowSums(rpkm[,10:17]>0.5)>3,1]
xf = x[rownames(x) %in% expressed, ]
xff = xf[xf$padj<0.01 & ! is.na(xf$padj), ] # 27% of genes are differentially expressed
nrow(xff)/nrow(xf)
hist( xff$log2FoldChange, n=100, col='gray')
## negative values indicate downregulation of gene expression
table( xff$log2FoldChange < 0 )
expressed = rpkm[ rowSums(rpkm[,10:17]>0.5)>3,1]
xf = x[rownames(x) %in% expressed, ]
xff = xf[xf$padj<0.01 & ! is.na(xf$padj), ] # 27% of genes are differentially expressed
nrow(xff)/nrow(xf)
hist( xff$log2FoldChange, n=100, col='gray')
## negative values indicate downregulation of gene expression TvsUnt
table( xff$log2FoldChange < 0 )
t.test( abs(xff$log2FoldChange[xff$log2FoldChange<0]),
abs(xff$log2FoldChange[xff$log2FoldChange>0]) )
plot( density( abs(xff$log2FoldChange[xff$log2FoldChange<0]) ),
lwd=2, col='red')
lines( density( abs(xff$log2FoldChange[xff$log2FoldChange>0]) ),
lwd=2, col='blue')
plot( density( (xff$baseMean[xff$log2FoldChange<0]) ),
lwd=2, col='red')
lines( density( (xff$baseMean[xff$log2FoldChange>0]) ),
lwd=2, col='blue')
plot( density( abs(xff$log2FoldChange[xff$log2FoldChange<0]) ),
lwd=2, col='red')
lines( density( abs(xff$log2FoldChange[xff$log2FoldChange>0]) ),
lwd=2, col='blue')
plot( density( (xff$baseMean[xff$log2FoldChange<0]) ),
lwd=2, col='red')
lines( density( (xff$baseMean[xff$log2FoldChange>0]) ),
lwd=2, col='blue')
head(xff)
xff[rownames(xff)=='MYC',]
xff[rownames(xff)=='SOX9',]
x[rownames(x)=='SOX9',]
xff = xff[order(xff$log2FoldChange,decreasing=FALSE),]
head(xff)
head(xff,n=20)
xff[rownames(xff)=='CYB5B']
xff[rownames(xff)=='CYB5B',]
x[rownames(x)=='CYB5B',]
xf = x[rownames(x) %in% expressed, ]
xff = xf[xf$padj<0.05 & ! is.na(xf$padj), ] # 27% of genes are differentially expressed
nrow(xff)/nrow(xf)
hist( xff$log2FoldChange, n=100, col='gray')
## negative values indicate downregulation of gene expression
table( xff$log2FoldChange < 0 )
expressed = rpkm[ rowSums(rpkm[,10:17]>0.5)>3,1]
xf = x[rownames(x) %in% expressed, ]
xff = xf[xf$padj<0.01 & ! is.na(xf$padj), ] # 27% of genes are differentially expressed
nrow(xff)/nrow(xf)
xff = xff[order(xff$log2FoldChange,decreasing=FALSE),]
head(xff)
head(xff,n=20)
library(distill)
rmarkdown::render()
getwd()
setwd('Users/pekowska/Site/pekowskalab.github.io/')
setwd('/Users/pekowska/Site/pekowskalab.github.io/')
rmarkdown::render('index.Rmd')
getwd()
rmarkdown::render('index.Rmd','test.html')
rmarkdown::render( input = 'index.Rmd', output_file = 'test.html', output_format = 'html_document')
rmarkdown::render( input = 'index.Rmd', output_file = 'main_page.pdf', output_format = 'pdf_document')
rmarkdown::render( input = 'index.Rmd', output_file = 'main_page')
rmarkdown::render( input = 'Research.Rmd', output_file = 'research.html', output_format = 'html_document')
rmarkdown::distill_article('index.Rmd')
getwd()
file.create(".nojekyll")
library(rtracklayer)
library(GenomicFeatures)
fig_dir = '~/Documents/Future/Nencki/ERC/figures/'
res_dir = '~/Documents/Future/Nencki/ERC/results/'
count_dir = '~/Documents/Future/Nencki/ERC/counts/'
wd = '~/Documents/Future/Nencki/ERC/scripts/'
y=read.delim('/Users/pekowska/Documents/Future/Nencki/Cognition/Barres_RNA-seq/mature.txt')
x=read.delim('/Users/pekowska/Documents/Future/Nencki/Cognition/Barres_RNA-seq/fetal.txt')
tf = read.delim( paste0(wd,'TFs_Human_2009') )
load('~/Documents/Future/Nencki/Cognition/Hg19_comprehensive_gene_anno.RData')
load("/Users/pekowska/Documents/Future/Nencki/Cognition/annotations.RData")
x$HOM=HOM[match(x$Gene,HOM$Symbol.y),2]
x$hs=rowMeans(x[,2:7])
x$mm=rowMeans(x[,8:9])
xtfs = x[x$HOM %in% tf$HGNC.symbol,]
x_expr_tfs = x[x$hs>2,]
y$hs=rowMeans(y[,2:13])
y$mm=rowMeans(y[,14:17])
y$HOM=HOM[match(y$Gene,HOM$Symbol.y),2]
ytfs = y[y$HOM %in% tf$HGNC.symbol,]
hs_tf = data.frame(Gene=x$HOM, fetal=x$hs, adult=y$hs, stringsAsFactors=FALSE)
hs_tf = hs_tf[hs_tf$Gene %in% tf$HGNC.symbol,]
head(xtfs)
dim(xtfs)
ls()
